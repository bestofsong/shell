#!/usr/bin/env bash
set -eu

which_remote=origin
commit=
is_no_remote=false
is_no_local=false
while [ "$#" -gt 0 ] ; do
  key="$1"
  case $key in
      --remote)
        which_remote="$2"
        shift ; shift
        ;;
      --no-remote)
        is_no_remote=true
        shift
        ;;
      --no-local)
        is_no_local=true
        shift
        ;;
      *)
        if [ -z "$commit" ] ; then
          commit="$key"
        fi
      shift
      ;;
  esac
done

if $is_no_local && $is_no_remote ; then
  exit 0
fi

if [ -z "$commit" ] ; then
  commit='head'
fi

declare -a branches=()
IFS_="$IFS"
IFS=$'\n'
if ! $is_no_local ; then
  branches+=($(git for-each-ref --format '%(refname)' refs/heads))
fi
if ! $is_no_remote ; then
  branches+=($(git for-each-ref --format '%(refname)' "refs/remotes/$which_remote"))
fi
IFS="$IFS_"

declare -a all_ref_ranges=()
for ref in "${branches[@]}" ; do
  if ! git merge-base --is-ancestor "$commit" "$ref" ; then
    continue
  fi
  all_ref_ranges+=("${commit}..${ref}")
done

git log --graph --oneline --decorate --color --abbrev-commit \
  --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' \
  --date=format-local:'%Y-%m-%d %z %a' "$@" "${all_ref_ranges[@]}"
which_remote=origin
