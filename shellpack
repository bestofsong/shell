#!/usr/bin/env bash

set -e

declare -a trees
trees=("$@")

pack_file() {
  # 文件路径
  local file=$1
  # 从tree文件夹开始的相对路径
  local file_relative=$2
  local dir_relative
  dir_relative=$(dirname "$file_relative")
  # 自定义EOF避免和文件内部的冲突
  local file_delim
  file_delim="shellpack-${RANDOM}"
  while grep "$file_delim" "$file" >/dev/null ; do
    file_delim="shellpack-${RANDOM}"
  done
  # 设置执行权限
  local perm
  perm=$(stat -f '%Lp' "$file")
  # mkdir
  echo "# Generate file: $file_relative"
  echo 'mkdir -p "'"$dir_relative"'"'
  echo 'cat >'"$file_relative"' <<"'"$file_delim"'"'
  cat "$file"
  echo $file_delim
  echo 'chmod '"$perm"' "'"$file_relative"'"'
  echo '#================================='
  echo
}

re_source_filename='.+\.h|.+\.m|.+\.mm|.+\.c|.+\.cc|.+\.cpp|.+\.hpp|.+\.txt|.+\.sh'

for tree in "${trees[@]}"; do
  full_tree_path=`(cd "${tree}" && pwd)`
  tree_name=$(basename "$tree")
  files=($(find -E "${full_tree_path%%/}" \
    -type f -and \( -perm +111 -or -iregex "$re_source_filename" \) ))
  for file in "${files[@]}"; do
    relative_file_path=${file#$full_tree_path}
    relative_file_path="${tree_name}$relative_file_path"
    pack_file "$file" "$relative_file_path"
  done
done
